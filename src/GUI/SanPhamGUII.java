/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.HoaDonBUS;
import BUS.SanPhamBUS;
import BUS.ctHoaDonBUS;
import DTO.HoaDonDTO;
import DTO.SanPhamDTO;
import DTO.CtHoaDonDTO;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.parser.DTDConstants;
import jdk.nashorn.internal.ir.BreakNode;
import sun.security.provider.ConfigFile;

/**
 *
 * @author SteelWeapon
 */
public class SanPhamGUII extends javax.swing.JFrame {
    /**
     * Creates new form SanPhamGUII
     */
    private DefaultTableModel ds;
    private DefaultTableModel dshd;
    private DefaultTableModel dstk;
    private SanPhamBUS spb = new SanPhamBUS();
    private ctHoaDonBUS chdb = new ctHoaDonBUS();
    private HoaDonBUS hdb = new HoaDonBUS();
    private int cr;
    private int cr_tk;
    private int cr_hd=0;
    
    public SanPhamGUII() {
        initComponents();
        TaoBangSPHoaDon();
        getMaHD();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfSoLuongCo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfMaSP = new javax.swing.JTextField();
        btnDoc = new javax.swing.JButton();
        tfTenSP = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfDonGia = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSPTK = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSPHD = new javax.swing.JTable();
        btThemHD = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        javax.swing.JButton btGiamHD = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        tfTimKiem = new javax.swing.JTextField();
        btTaoMoiHoaDon = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfKhachHang = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tfNgayLap = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfTienHang = new javax.swing.JTextField();
        tfGiamGia = new javax.swing.JTextField();
        tfTongCong = new javax.swing.JTextField();
        btThanhToan = new javax.swing.JButton();
        btTimKiem = new javax.swing.JButton();
        tfSoLuong = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfMHD = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Bán Hàng");
        setName("frameSP"); // NOI18N

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1011, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab3", jPanel3);

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Đơn Giá", "Số Lượng Có"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        jLabel1.setText("Mã Sản Phẩm");

        jLabel6.setText("Số Lượng Có");

        jLabel2.setText("Tên Sản Phẩm");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 102));
        jLabel7.setText("Thông tin hàng hóa");

        btnDoc.setText("Hiển Thị");
        btnDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDocMouseClicked(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.setToolTipText("");
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemMouseClicked(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaMouseClicked(evt);
            }
        });

        btnSua.setText("Chỉnh Sửa");
        btnSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuaMouseClicked(evt);
            }
        });

        btnThoat.setMnemonic('T');
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 102));
        jLabel4.setText("Danh Sách Mặt Hàng");

        jLabel5.setText("Đơn Giá");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(btnDoc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnThem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnXoa)
                                .addGap(15, 15, 15)
                                .addComponent(btnSua)
                                .addGap(14, 14, 14)
                                .addComponent(btnThoat))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(tfTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfSoLuongCo))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(tfMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel5)
                                    .addGap(28, 28, 28)
                                    .addComponent(tfDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 500, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfMaSP)
                    .addComponent(jLabel5)
                    .addComponent(tfDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(tfSoLuongCo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfTenSP)
                        .addGap(56, 56, 56)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDoc)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnThoat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Danh Mục Sản Phẩm", jPanel1);

        tblSPTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Đơn Giá", "Số lượng còn"
            }
        ));
        tblSPTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSPTKMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSPTK);

        tblSPHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Số lượng", "Đơn giá", "Mã Giảm Giá"
            }
        ));
        tblSPHD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblSPHDFocusGained(evt);
            }
        });
        jScrollPane3.setViewportView(tblSPHD);

        btThemHD.setText("Thêm");
        btThemHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btThemHDMouseClicked(evt);
            }
        });

        btXoa.setText("Xóa");
        btXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btXoaMouseClicked(evt);
            }
        });

        btGiamHD.setText("Giảm");
        btGiamHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btGiamHDMouseClicked(evt);
            }
        });

        jLabel8.setText("Tìm kiếm theo tên: ");

        btTaoMoiHoaDon.setText("Tạo mới hóa đơn");

        jLabel9.setText("Số lượng");

        jLabel10.setText("Khách hàng:");

        jLabel11.setText("Ngày lập");

        jLabel12.setText("Tiền hàng");

        jLabel13.setText("Giảm giá");

        jLabel14.setText("Tổng cộng");

        btThanhToan.setText("Thanh Toán");
        btThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btThanhToanMouseClicked(evt);
            }
        });

        btTimKiem.setText("Tìm kiếm");
        btTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btTimKiemMouseClicked(evt);
            }
        });

        jLabel3.setText("Hóa Đơn:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel8)
                        .addGap(30, 30, 30)
                        .addComponent(tfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btTimKiem))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btTaoMoiHoaDon)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btGiamHD, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btThemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel9)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel10))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfKhachHang)
                                    .addComponent(tfMHD, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNgayLap)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfTongCong, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfTienHang, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                    .addComponent(tfGiamGia))
                                .addGap(42, 42, 42)
                                .addComponent(btThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(tfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btTimKiem))
                        .addGap(7, 7, 7)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tfMHD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btThemHD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btGiamHD)
                                .addGap(18, 18, 18)
                                .addComponent(btXoa)
                                .addGap(18, 18, 18)
                                .addComponent(btTaoMoiHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfTienHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfGiamGia)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfTongCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(77, 77, 77))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(56, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Hóa Đơn", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        int n = tblSanPham.getSelectedRow();
        cr = n;
        tfMaSP.setText(tblSanPham.getValueAt(n, 0).toString());
        tfTenSP.setText(tblSanPham.getValueAt(n, 1).toString());
        tfDonGia.setText(tblSanPham.getValueAt(n, 2).toString());
        tfSoLuongCo.setText(tblSanPham.getValueAt(n, 3).toString());

    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDocMouseClicked
        Vector header = new Vector();
        header.add("Mã Sản Phẩm");
        header.add("Tên Sản Phẩm");
        //header.add("Đơn vị tính");
        header.add("Đơn giá");
        header.add("Số lượng có");
        DefaultTableModel model = new DefaultTableModel(header,0);
        ArrayList<SanPhamDTO> ar = null;
        // SanPhamBUS spb = new SanPhamBUS();
        try {
            ar = spb.getSanPham();
            SanPhamDTO spd = new SanPhamDTO();
            for (int i = 0; i < ar.size(); i++) {
                Vector row = new Vector();
                spd = ar.get(i);
                row.add(spd.getMaSP());
                row.add(spd.getTenSP());
               // row.add(spd.getDonViTinh());
                row.add(spd.getDonGia());
                row.add(spd.getSoLuongCo());
                model.addRow(row);
            }

            ds = model;
            tblSanPham.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_btnDocMouseClicked

    private void btnThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseClicked
        try {
            //  SanPhamBUS spb = new SanPhamBUS();
            SanPhamDTO spd = new SanPhamDTO();// tạo spDTO mới 
            spd.setMaSP(Integer.parseInt(tfMaSP.getText()));// Set các giá trị vào
            spd.setTenSP(tfTenSP.getText());
        //    spd.setDonViTinh(tfDVT.getText());
            spd.setDonGia(Integer.parseInt(tfDonGia.getText()));
            spd.setSoLuongCo(Integer.parseInt(tfSoLuongCo.getText()));
            spb.Insert(spd); // Thêm sp vào CSDL
            Vector row = new Vector();
            row.add(tfMaSP.getText());
            row.add(tfTenSP.getText());
            //row.add(tfDVT.getText());
            row.add(tfDonGia.getText());
            row.add(tfSoLuongCo.getText());
            ds.addRow(row);
            tblSanPham.setModel(ds);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnThemMouseClicked

    private void btnXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseClicked
        try {
            SanPhamDTO spd = new SanPhamDTO();
            spd.setMaSP(Integer.parseInt(tfMaSP.getText()));
            spd.setTenSP(tfTenSP.getText());
          //  spd.setDonViTinh(tfDVT.getText());
            spd.setDonGia(Integer.parseInt(tfDonGia.getText()));
            spd.setSoLuongCo(Integer.parseInt(tfSoLuongCo.getText()));
            spb.Delete(spd);
            ds.removeRow(cr);
            tblSanPham.setModel(ds);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_btnXoaMouseClicked

    private void btnSuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseClicked
        try {
            // tạo sp mới sửa nó vào csdl
            SanPhamDTO spd = new SanPhamDTO();
            spd.setMaSP(Integer.parseInt(tfMaSP.getText()));
            spd.setTenSP(tfTenSP.getText());
          //  spd.setDonViTinh(tfDVT.getText());
            spd.setDonGia(Integer.parseInt(tfDonGia.getText()));
            spd.setSoLuongCo(Integer.parseInt(tfSoLuongCo.getText()));
            spb.Update(spd);
            // sửa nội dung trong bảng
            ds.setValueAt(tfMaSP.getText(),cr,0); // Ds == model: Set tên sp ở tfMaSP dòng hiện tại cột 0
            ds.setValueAt(tfTenSP.getText(),cr,1);
            ds.setValueAt(tfDonGia.getText(),cr,2);
            ds.setValueAt(tfSoLuongCo.getText(),cr,3);
            tblSanPham.setModel(ds);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnSuaMouseClicked

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        this.dispose(); // thoát ctrinh`
        //mnemonic: Phím tắt thoát ctrinh ALT+...
    }//GEN-LAST:event_btnThoatActionPerformed
    private void TaoBangTimKiem(){
        Vector header = new Vector();
        header.add("Mã Sản Phẩm");
        header.add("Tên Sản Phẩm");
        //header.add("Đơn vị tính");
        header.add("Đơn giá");
        header.add("Số lượng có");
        DefaultTableModel model = new DefaultTableModel(header,0);
        dstk=model;
        tblSPTK.setModel(dstk);
    }
    private void btTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTimKiemMouseClicked
        TaoBangTimKiem();
        ArrayList<SanPhamDTO> ar = null;
        // SanPhamBUS spb = new SanPhamBUS();
        
        try {
            ar = spb.getSanPham("tensp = "+"'"+tfTimKiem.getText()+"'" );
            SanPhamDTO spd = new SanPhamDTO();
            for (int i = 0; i < ar.size(); i++) {
                Vector row = new Vector();
                spd = ar.get(i);
                row.add(spd.getMaSP());
                row.add(spd.getTenSP());
               // row.add(spd.getDonViTinh());
                row.add(spd.getDonGia());
                row.add(spd.getSoLuongCo());
                dstk.addRow(row);
            }

            //ds = model;
            tblSPTK.setModel(dstk);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_btTimKiemMouseClicked
    private SanPhamDTO TimKiemSPTheoID(String TableID){
        SanPhamDTO spd = new SanPhamDTO();
        ArrayList<SanPhamDTO> ar = null;
        try {
            ar = spb.getSanPham("masp = "+"'"+TableID+"'" );
            for (int i = 0; i < ar.size(); i++) {
                spd = ar.get(i);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return spd;
    }
    private void btThemHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btThemHDMouseClicked
        Vector row = new Vector();
        row.add(tblSPTK.getValueAt(cr_tk,0));
        row.add(tblSPTK.getValueAt(cr_tk,1));
        int slThem=0;
        int slCo=0;
        int dem=0;
        if(tfSoLuong.getText().isEmpty()){ //so sánh chuỗi có rỗng hay k 
            slThem=1;
            slCo =Integer.parseInt(tblSPTK.getValueAt(cr_tk,3).toString());
        }else{
            slThem =Integer.parseInt(tfSoLuong.getText());
            slCo =Integer.parseInt(tblSPTK.getValueAt(cr_tk,3).toString());
        }
        if( slThem > slCo ){
                JOptionPane.showMessageDialog(null,"Không đủ sản phẩm để thêm vào hóa đơn");
                    
        }
        else{
                slCo-=slThem;
                tblSPTK.setValueAt(slCo, cr_tk,3); // set lại giá trị đã trừ ra
                int n= tblSPHD.getRowCount();
                for (int i = 0; i <n ; i++) {
                    dem++; // đảm bảo duyệt hết giá trị của bản hóa đơn
                    if(tblSPTK.getValueAt(cr_tk,0)==tblSPHD.getValueAt(i,0)){
                        
                        int slCoHD = Integer.parseInt(tblSPHD.getValueAt(i,2).toString());
                        slThem+=slCoHD;
                        tblSPHD.setValueAt(slThem,i,2);
                        break;
                    }
                    else{
                        if(i==0 && tblSPHD.getValueAt(i,0)==null){
                            dshd.removeRow(i);
                            tblSPHD.setModel(dshd);
                        }
                        if(dem==n){
                             row.add(slThem); // set giá trị thêm vào
                             row.add(tblSPTK.getValueAt(cr_tk,2));
                             dshd.addRow(row);
                             tblSPHD.setModel(dshd);   
                        }
                       
                    }
                    
            }
        }  
        SanPhamDTO spd = new SanPhamDTO();
        spd.setMaSP(Integer.parseInt(tblSPTK.getValueAt(cr_tk,0).toString()));
        spd.setTenSP(tblSPTK.getValueAt(cr_tk,1).toString());
        spd.setDonGia(Integer.parseInt(tblSPTK.getValueAt(cr_tk,2).toString()));
        spd.setSoLuongCo(Integer.parseInt(tblSPTK.getValueAt(cr_tk,3).toString()));
        try {
            spb.Update(spd);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        HienTongGiaTien();
        HienTongThanhTien();
    }//GEN-LAST:event_btThemHDMouseClicked
    private void TaoBangSPHoaDon(){
        Vector header = new Vector();
        header.add("Mã Sản Phẩm");
        header.add("Tên Sản Phẩm");
        header.add("Số lượng");
        header.add("Đơn giá");
        header.add("Mã giảm giá");
        DefaultTableModel model = new DefaultTableModel(header,1);
//        Vector row = new Vector();
//        row.add(" ");
//        row.add(" ");
//        row.add(" ");
//        row.add(" ");
//        row.add(" ");
//        model.addRow(row);
        dshd=model;
        tblSPHD.setModel(model);
      
    }
    
    private void tblSPTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSPTKMouseClicked
        int n = tblSPTK.getSelectedRow(); // lấy số dòng hiện tại của table sptk
        cr_tk = n;
    }//GEN-LAST:event_tblSPTKMouseClicked

    private void tblSPHDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblSPHDFocusGained
        int n = tblSPHD.getSelectedRow();
        cr_hd = n;
    }//GEN-LAST:event_tblSPHDFocusGained

    private void btGiamHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btGiamHDMouseClicked
        Vector row = new Vector();
        row.add(tblSPHD.getValueAt(cr_hd,0));
        row.add(tblSPHD.getValueAt(cr_hd,1));
        int SoLuongGiam = 0; // SoLuong mà tfsoluong có
        int SoLuongCo=0; // So luong tblsphoadon có
        int SoLuongTKCo=0; // So luong tblsptk có
        int dem=0;
        if(tfSoLuong.getText().isEmpty()){ // nếu tf số lượng rỗng
            SoLuongGiam=1; // mỗi lần bấm nut giảm thì sẽ giảm 1 dvi
            SoLuongCo=Integer.parseInt(tblSPHD.getValueAt(cr_hd,2).toString()); // nhan gia tri so luong cua tblhd
        }
        else{
            SoLuongGiam=Integer.parseInt(tfSoLuong.getText());
            SoLuongCo=Integer.parseInt(tblSPHD.getValueAt(cr_hd,2).toString());
        }
        if(SoLuongGiam > SoLuongCo){
            JOptionPane.showMessageDialog(null,"Đã giảm hết sản phẩm");
        }
        else{
            SoLuongCo-=SoLuongGiam; 
            tblSPHD.setValueAt(SoLuongCo,cr_hd,2); // trừ số lượng của bản hoá đơn
           
            int n = tblSPTK.getRowCount();
            for (int i = 0; i < n; i++) {
                dem++; // dam bao duyet het gia tri cua tblsptk
                if(tblSPHD.getValueAt(cr_hd,0)== tblSPTK.getValueAt(i, 0)){ // ban tbltimkiem tồn tại sp giống tblhoadon 
                   SoLuongTKCo=Integer.parseInt(tblSPTK.getValueAt(i,3).toString()); // Lấy giá trị(SL có) của tblsptk gán vào SoLuongTKCo
                   SoLuongTKCo+=SoLuongGiam; // sau đó cộng thêm cho số lượng giảm
                   tblSPTK.setValueAt(SoLuongTKCo,i,3); // giá trị sau khi giảm 
                   if(SoLuongCo==0){
                       dshd.removeRow(cr_hd); // Khi sản phẩm chỉ còn 0 thì xóa đi sản phẩm trong bảng tblsphd
                   }
                   tblSPHD.setModel(dshd);
                   break;
                }
                else{
                    if(dem==n){
                        row.add(tblSPHD.getValueAt(cr_hd,3));
                        String id = tblSPHD.getValueAt(cr_hd,0).toString();
                        SanPhamDTO sp = new SanPhamDTO();
                        sp=TimKiemSPTheoID(id);
                        SoLuongCo = sp.getSoLuongCo()+ SoLuongGiam;
                        row.add(SoLuongCo);
                        dstk.addRow(row);
                        tblSPTK.setModel(dstk);
                    }
                }
            }
        }
        if(tblSPHD.getRowCount()==0){ // code rắc rối. Bởi vì btn thêm phải khởi tạo 1 dòng đầu tiên cho bảng tblsphd thì code mới hoạt động
            // nên khi xóa đến sản phẩm cuối cùng thì phải add lại một dòng rỗng mới 
            TaoBangSPHoaDon();// câu lệnh tạo dòng mới
        }
        for (int i = 0; i < tblSPTK.getRowCount(); i++) {
             SanPhamDTO spd = new SanPhamDTO();
             spd.setMaSP(Integer.parseInt(tblSPTK.getValueAt(i,0).toString()));
             spd.setTenSP(tblSPTK.getValueAt(i,1).toString());
             spd.setDonGia(Integer.parseInt(tblSPTK.getValueAt(i,2).toString()));
             spd.setSoLuongCo(Integer.parseInt(tblSPTK.getValueAt(i,3).toString()));
        try {
            spb.Update(spd);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        }
        HienTongGiaTien();
        HienTongThanhTien();
    }//GEN-LAST:event_btGiamHDMouseClicked

    private void btXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btXoaMouseClicked
        Vector row = new Vector();
        row.add(tblSPHD.getValueAt(cr_hd,0));
        row.add(tblSPHD.getValueAt(cr_hd,1));
        int SoLuongHDCo = 0;
        int SoLuongTKCo = 0;    
        int SoLuongCo= Integer.parseInt(tblSPHD.getValueAt(cr_hd,2).toString()); // lấy số lượng của bảng tblhd ở dòng cần xóa
        int dem =0;
        int n = tblSPTK.getRowCount();
            for (int i = 0; i < n; i++) {
                dem++; // dam bao duyet het gia tri cua tblsptk
                if(tblSPHD.getValueAt(cr_hd,0)== tblSPTK.getValueAt(i, 0)){ // ban tbltimkiem tồn tại sp giống tblhoadon 
                   SoLuongHDCo=Integer.parseInt(tblSPHD.getValueAt(cr_hd,2).toString());
                   SoLuongTKCo=Integer.parseInt(tblSPTK.getValueAt(i,3).toString()); // Lấy giá trị(SL có) của tblsptk gán vào SoLuongTKCo
                   SoLuongTKCo+=SoLuongHDCo; // sau đó cộng thêm cho số lượng giảm
                   tblSPTK.setValueAt(SoLuongTKCo,i,3); // giá trị sau khi giảm
                }
                else{
                    if(dem==n){
                        row.add(tblSPHD.getValueAt(cr_hd,3));
                        String id = tblSPHD.getValueAt(cr_hd,0).toString();
                        SanPhamDTO sp = new SanPhamDTO();
                        sp=TimKiemSPTheoID(id);
                        int SoLuongHDF =sp.getSoLuongCo()+ SoLuongCo;
                        row.add(SoLuongHDF);
                        dstk.addRow(row);
                        tblSPTK.setModel(dstk);
                    }
                }
            }
            dshd.removeRow(cr_hd);
            tblSPHD.setModel(dshd);
        if(tblSPHD.getRowCount()==0){ // code rắc rối. Bởi vì btn thêm phải khởi tạo 1 dòng đầu tiên cho bảng tblsphd thì code mới hoạt động
            // nên khi xóa đến sản phẩm cuối cùng thì phải add lại một dòng rỗng mới 
            TaoBangSPHoaDon();// câu lệnh tạo dòng mới
        }
        for (int i = 0; i < tblSPTK.getRowCount(); i++) {
             SanPhamDTO spd = new SanPhamDTO();
             spd.setMaSP(Integer.parseInt(tblSPTK.getValueAt(i,0).toString()));
             spd.setTenSP(tblSPTK.getValueAt(i,1).toString());
             spd.setDonGia(Integer.parseInt(tblSPTK.getValueAt(i,2).toString()));
             spd.setSoLuongCo(Integer.parseInt(tblSPTK.getValueAt(i,3).toString()));
        try {
            spb.Update(spd);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        }
        HienTongGiaTien();
        HienTongThanhTien();
    }//GEN-LAST:event_btXoaMouseClicked

    private void btThanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btThanhToanMouseClicked
        try {
            HoaDonDTO hdd = new HoaDonDTO();
            hdd.setMaHD(Integer.parseInt(tfMHD.getText()));
            hdd.setMaNV(1);
            if(!tfKhachHang.getText().isEmpty()){
               hdd.setMaKhachHang(Integer.parseInt(tfKhachHang.getText()));
            }
            hdd.setNgayNhap(tfNgayLap.getText()); 
            hdd.setTongTien(Integer.parseInt(tfTongCong.getText()));
            hdb.Insert(hdd);
            JOptionPane.showMessageDialog(null,"Thêm dữ liệu vào bảng hóa đơn thành công");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        try {
            ArrayList<CtHoaDonDTO> arc = new ArrayList<CtHoaDonDTO>();
            for (int i = 0; i < tblSPHD.getRowCount(); i++) {
                int sl=Integer.parseInt(tblSPHD.getValueAt(i,2).toString());
                int dg=Integer.parseInt(tblSPHD.getValueAt(i,3).toString());
                int ThanhTien= sl*dg;
                CtHoaDonDTO hd = new CtHoaDonDTO();
                hd.setMaHD(Integer.parseInt(tfMHD.getText()));
                hd.setMaSanPham(Integer.parseInt(tblSPHD.getValueAt(i,0).toString()));
                hd.setSoLuong(sl);
                hd.setDonGia(dg);
                if(tblSPHD.getValueAt(i,4)!=null){
                   hd.setMaGiamGia(Integer.parseInt(tblSPHD.getValueAt(i,4).toString())); 
                }
                hd.setThanhTien(ThanhTien);
                arc.add(hd);
            }
            chdb.Inserts(arc);
            JOptionPane.showMessageDialog(null,"Thanh toán thành công");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btThanhToanMouseClicked
     private void getMaHD(){ // Khởi tạo mã hóa đơn
        ArrayList<Integer> arI= new ArrayList<Integer>();
        ArrayList<HoaDonDTO> ar = null;
        int CHD=1;
        try {
            ar = hdb.getHoaDon(); //chbd chitiethoadonbus 
            HoaDonDTO hd = new HoaDonDTO();
            for (int i = 0; i < ar.size(); i++) {
                hd = ar.get(i); 
                arI.add(hd.getMaHD()); // add tất cả các mã hóa đơn hiện có vào arI
            }
            for (int i = 0; i < arI.size(); i++) {
                int check = arI.get(i); // arI.get(i) lấy từng giá trị gán vào biến check
                if(CHD == check ){
                    CHD++; // nếu bằng thì CHD ++ lên
                }
                if(check - CHD >= 1){ 
                    break; // nếu lớn hơn hoặc = 1. Mã hđ ngay vị trí đó rỗng ngắc vòng lập
                }
            }
            Object t = CHD;
            tfMHD.setText(t.toString()); // gán giá trị vào 
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }  
    private void HienTongGiaTien(){
        int Tong=0;
        for (int i = 0; i < tblSPHD.getRowCount(); i++) {
            if(tblSPHD.getValueAt(i,3)!= null && tblSPHD.getValueAt(i,2)!=null){
               int TongGiaTri=Integer.parseInt(tblSPHD.getValueAt(i,3).toString());
               int TongSoLuong=Integer.parseInt(tblSPHD.getValueAt(i,2).toString());
               Tong+=TongGiaTri*TongSoLuong; 
            }  
        }
        Object t = Tong;
        tfTienHang.setText(t.toString());
    }
    private void HienTongThanhTien(){
        int Tong =0;
        int TienThanhToan =Integer.parseInt(tfTienHang.getText());
        int GiamGia=1;
        if(!tfGiamGia.getText().isEmpty()){
            GiamGia = Integer.parseInt(tfGiamGia.getText());
        }
        Tong=TienThanhToan*GiamGia;
        Object t = Tong;
        tfTongCong.setText(t.toString());
    }
    void HienGiamGia(){
        int Tong=0;
        for (int i = 0; i < tblSPHD.getRowCount(); i++) {
            if(tblSPHD.getValueAt(i,4)!=null){
                Tong+=Integer.parseInt(tblSPHD.getValueAt(i,4).toString());
            }
        }
        Object t = Tong;
        tfGiamGia.setText(t.toString());
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SanPhamGUII.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SanPhamGUII.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SanPhamGUII.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SanPhamGUII.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SanPhamGUII().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btTaoMoiHoaDon;
    private javax.swing.JButton btThanhToan;
    private javax.swing.JButton btThemHD;
    private javax.swing.JButton btTimKiem;
    private javax.swing.JButton btXoa;
    private javax.swing.JButton btnDoc;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblSPHD;
    private javax.swing.JTable tblSPTK;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField tfDonGia;
    private javax.swing.JTextField tfGiamGia;
    private javax.swing.JTextField tfKhachHang;
    private javax.swing.JTextField tfMHD;
    private javax.swing.JTextField tfMaSP;
    private javax.swing.JTextField tfNgayLap;
    private javax.swing.JTextField tfSoLuong;
    private javax.swing.JTextField tfSoLuongCo;
    private javax.swing.JTextField tfTenSP;
    private javax.swing.JTextField tfTienHang;
    private javax.swing.JTextField tfTimKiem;
    private javax.swing.JTextField tfTongCong;
    // End of variables declaration//GEN-END:variables
}
